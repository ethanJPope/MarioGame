plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'


test {
    useJUnitPlatform()
}

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.10.5"
project.ext.lwjglNatives = "natives-windows"
project.ext.imguiVersion = '1.77-0.17.1'

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
    jcenter()
}

dependencies {
    // Box2D
    implementation name: 'jbox2d-library'

    implementation 'com.google.code.gson:gson:2.11.0'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "io.imgui.java:binding:$imguiVersion"
    implementation "io.imgui.java:lwjgl3:$imguiVersion"

    // Include all available natives, but it's likely that you want something specific
    runtimeOnly "io.imgui.java:natives-windows:$imguiVersion"

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
}


task copyAssets(type: Copy) {
    copy {
        from "assets"
        into "${buildDir}/libs/assets"
    }

    copy {
        from "level.txt"
        into "${buildDir}/libs"
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

fatJar.dependsOn(copyAssets)

artifacts {
    archives fatJar
}